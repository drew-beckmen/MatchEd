from fastapi import HTTPException, status
from pydantic import BaseModel

# We use this file to define custom error responses for our API.
# Error responses should be properly reflected in the
# OpenAPI spec/autogenerated docs


class ErrorDetail(BaseModel):
    message: str
    errors: list[str]


class ErrorResponseFormat(BaseModel):
    detail: ErrorDetail

# Extend the built in FastAPI HTTPException with a custom error response
class UserNotFound(HTTPException):
    def __init__(self, email: str) -> None:
        error: ErrorDetail = ErrorDetail(
            message="User not found.",
            errors=[f"The user with email {email} does not exist."],
        )
        super().__init__(
            status_code=status.HTTP_404_NOT_FOUND,
            detail=error.dict(),
        )
